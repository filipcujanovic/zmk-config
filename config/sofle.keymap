/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>

#define DEFAULT 0
#define GAMING  1
#define LOWER   2
#define RAISE   3
#define ADJUST  4
#define HYPER(key) LS(LC(LA(LG(key))))

&left_encoder {
    steps = <60>;
};

&right_encoder {
    steps = <60>;
};

&mt {
    tapping-term-ms = <200>;
    quick-tap-ms = <150>;
};

/ {
    behaviors {
        shifty: shift_caps_word {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <150>;
            bindings = <&kp LSHIFT >, <&caps_word>;
        };
        esc_tab: gaming_esc_tab {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <150>;
            bindings = <&kp ESC>, <&kp TAB>;
        };
        layer_alt: gaming_layer {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <150>;
            bindings = <&kp LALT>, <&tog GAMING>;
        };
    };
    conditional_layers {
        compatible = "zmk,conditional-layers";
        tri_layer {
            if-layers = <1 2>;
            then-layer = <3>;
        };
    };
    sensors {
        triggers-per-rotation = <30>;
    };
    keymap {
        compatible = "zmk,keymap";
        default_layer {
// ------------------------------------------------------------------------------------------------------------
// |       |     |     |      |      |      |                          |       |       |       |      |       |       |
// |  ESC  |  Q  |  W  |  E   |  R   |  T   |                          |  Y    |  U    |  I    |  O   |   P   | BKSPC |
// |  CTRL |  A  |  S  |  D   |  F   |  G   |                          |  H    |  J    |  K    |  L   |   ;   |   '   |
// | SHIFT |  Z  |  X  |  C   |  V   |  B   |  MUTE  |  |  Play/Pause  |  N    |  M    |  ,    |  .   |   /   | SHIFT |
//               |     | ALT  | GUI | LOWER |  ENTER |  |     SPACE    | RAISE |  GUI  | ALT   |      |
            bindings = <
&none         &none  &none    &none      &none     &none                                            &none      &none     &none     &none    &none    &none
&kp ESC       &kp Q  &kp W    &kp E      &kp R     &kp T                                            &kp Y      &kp U     &kp I     &kp O    &kp P    &kp BSPC
&mt LCTRL TAB &kp A  &kp S    &kp D      &kp F     &kp G                                            &kp H      &kp J     &kp K     &kp L    &kp SEMI &kp SQT
&shifty       &kp Z  &kp X    &kp C      &kp V     &kp B     &kp C_MUTE            &kp C_PLAY_PAUSE &kp N      &kp M     &kp COMMA &kp DOT  &kp FSLH &shifty
                     &none    &layer_alt &kp LGUI  &mo LOWER &kp RET               &kp SPACE        &mo RAISE  &kp RGUI  &kp RALT  &none
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp C_NEXT C_PREVIOUS>;
            //sensor-bindings = <&inc_dec_kp UP DOWN &inc_dec_kp RIGHT LEFT>;
        };

        gaming_layer {
// ------------------------------------------------------------------------------------------------------------
// |       |     |     |      |      |      |                          |       |       |       |      |       |       |
// |  ESC  |  Q  |  W  |  E   |  R   |  T   |                          |  Y    |  U    |  I    |  O   |   P   | BKSPC |
// |  CTRL |  A  |  S  |  D   |  F   |  G   |                          |  H    |  J    |  K    |  L   |   ;   |   '   |
// | SHIFT |  Z  |  X  |  C   |  V   |  B   |  MUTE  |  |  Play/Pause  |  N    |  M    |  ,    |  .   |   /   | SHIFT |
//               |     | ALT  | GUI | LOWER |  ENTER |  |     SPACE    | RAISE |  GUI  | ALT   |      |
            bindings = <
&none         &none  &none    &none      &none     &none                                            &none      &none     &none     &none    &none    &none
&esc_tab      &kp Q  &kp W    &kp E      &kp R     &kp T                                            &kp Y      &kp U     &kp I     &kp O    &kp P    &kp BSPC
&kp LCTRL     &kp A  &kp S    &kp D      &kp F     &kp G                                            &kp H      &kp J     &kp K     &kp L    &kp SEMI &kp SQT
&kp LSHIFT    &kp Z  &kp X    &kp C      &kp V     &kp B     &kp C_MUTE            &kp C_PLAY_PAUSE &kp N      &kp M     &kp COMMA &kp DOT  &kp FSLH &shifty
                     &none    &trans     &trans    &mo LOWER &kp SPACE             &kp RET          &mo RAISE  &trans    &trans    &none
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp C_NEXT C_PREVIOUS>;
            //sensor-bindings = <&inc_dec_kp UP DOWN &inc_dec_kp RIGHT LEFT>;
        };

        lower_layer {
// TODO: Some binds are waiting for shifted keycode support.
// ------------------------------------------------------------------------------------------------------------
// |       |     |     |      |      |      |                   |      |       |       |      |       |       |
// | `     |   1 |   2 |   3  |   4  |   5  |                   |   6  |   7   |   8   |   9  |    0  |       |
// |       |  !  |  @  |  #   |  $   |  %   |                   |  ^   |  &    |  *    |  (   |   )   |   |   |
// |       |  =  |  -  |  +   |  {   |  }   |        |  |       |  [   |  ]    |  ;    |  :   |   \   |   _   |
//               |     |      |      |      |        |  |       |      |       |       |      |
            bindings = <
&none     &none     &none     &none       &none     &none                     &none     &none    &none           &none     &none     &none
&kp GRAVE &kp N1    &kp N2    &kp N3      &kp N4    &kp N5                    &kp N6    &kp N7   &kp N8          &kp N9    &kp N0    &trans
&trans    &kp EXCL  &kp AT    &kp HASH    &kp DLLR  &kp PRCNT                 &kp CARET &kp AMPS &kp KP_MULTIPLY &kp LPAR  &kp RPAR  &kp PIPE
&trans    &kp EQUAL &kp MINUS &kp KP_PLUS &kp LBRC  &kp RBRC  &trans   &trans &kp LBKT  &kp RBKT &kp SEMI        &kp COLON &kp BSLH  &kp UNDERSCORE
                    &trans    &trans      &trans    &trans    &trans   &trans &trans    &trans   &trans          &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp C_NEXT C_PREVIOUS>;
            //sensor-bindings = <&inc_dec_kp UP DOWN &inc_dec_kp RIGHT LEFT>;
        };

        raise_layer {
// ------------------------------------------------------------------------------------------------------------
// |       |         |         |          |        |      |                |      |          |       |      |       |       |
// |       |         |         |          |        |      |                |      |          |   ^   |      |       |       |
// |       |HYPER + 1|HYPER + 2|screenshot| scrsht | CAPS |                |      |   <-     |   v   |  ->  |  DEL  | BKSPC |
// |       |         |         |          |        |      |      |  |      |      |          |       |      |       |       |
//         |         |         |          |        |      |      |  |      |      |          |       |
            bindings = <
&none      &none           &none         &none              &none             &none                      &none       &none       &none       &none       &none       &none
&none      &none           &none         &none              &none             &none                      &none       &none       &none       &none       &none       &none
&trans     &kp HYPER(N1)   &kp HYPER(N2) &kp LG(LS(N4))     &kp LG(LS(N5))    &kp CLCK                   &kp LEFT    &kp DOWN    &kp UP      &kp RIGHT   &kp DEL     &kp BSPC
&trans     &none           &none         &none              &none             &trans    &trans   &trans  &none       &none       &none       &none       &none       &trans
                           &trans        &trans             &trans            &trans    &trans   &trans  &trans      &trans      &trans      &trans
            >;

            //sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp C_NEXT C_PREVIOUS>;
            sensor-bindings = <&inc_dec_kp UP DOWN &inc_dec_kp RIGHT LEFT>;
        };

        adjust_layer {
// ------------------------------------------------------------------------------------------------------------
// |EXT POWER OFF|       |      |       |       |      |                |      |  F1   |  F2   |  F3  |  F4   |       |
// |             |       |      |       |       |      |                |      |  F5   |  F6   |  F7  |  F8   |       |
// | BTCLR       |  BT1  | BT2  |  BT3  |  BT4  | BT5  |                |      |  F9   |  F10  |      |       |       |
// |             |       |      |       |       |      |      |  |      |      |       |       |      |       |       |
//               |       |      |       |       |      |      |  |      |      |       |       |
            bindings = <
&none              &none           &none           &none            &none              &none                    &none   &none   &none   &none   &none   &none
&ext_power EP_OFF  &none           &none           &none            &none              &none                    &none   &kp F1  &kp F2  &kp F3  &kp F4  &none
&bt BT_CLR         &bt BT_SEL 0    &bt BT_SEL 1    &bt BT_SEL 2     &bt BT_SEL 3       &bt BT_SEL 4             &none   &kp F5  &kp F6  &kp F7  &kp F8   &none
&none              &none           &none           &none            &none              &none   &none    &none   &none   &kp F9  &kp F10 &none   &none   &none
                                   &trans          &trans           &trans            &trans   &trans   &trans  &trans  &trans  &trans  &trans
            >;

            //sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp C_NEXT C_PREVIOUS>;
            sensor-bindings = <&inc_dec_kp UP DOWN &inc_dec_kp RIGHT LEFT>;
        };
    };
};
